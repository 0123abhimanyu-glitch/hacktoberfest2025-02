class Solution {
public:
    int helper(int curr,int prev,vector<int>& nums,vector<vector<int>>& dp){
        if(curr==nums.size()){
            return 0;
        }
        if(dp[curr][prev+1]!=-1) return dp[curr][prev+1];
        int take=0;
        if(prev==-1 || nums[prev]<nums[curr]){
            take=1+helper(curr+1,curr,nums,dp);
        }
        int notTake=helper(curr+1,prev,nums,dp);
        return dp[curr][prev+1]=max(take,notTake);
    }
    int lengthOfLIS(vector<int>& nums) {
        vector<vector<int>> dp(nums.size()+1,vector<int>(nums.size()+1,-1));
        return helper(0,-1,nums,dp);
    }
};
